syntax = "proto3";

package todoproto;


// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative todoproto/todogrpc.proto

option go_package = "oofp/todogrpc/todoproto";

service TodoGrpc {
    rpc CreateNewToDo(NewToDo) returns (ToDo) {}
    rpc GetAllToDos (NoParams) returns (stream ToDo) {}
    rpc MonitorToDos (NoParams) returns (stream ToDoUpdate) {}
    rpc ApplyOps (stream ToDoOp) returns (stream ToDoUpdate) {}
    rpc KeepAlive (stream Ping) returns (stream Pong) {}
    rpc Kill (NoParams) returns (NoParams) {}
}

message NewToDo {
    string task = 1;
    int32 userID = 2;
}

message ToDo {
    string task = 1;
    int32 userID = 2;
    bool done = 3;
    string todoID = 4;
}

message NoParams {

}

enum ToDoUpdateType {
    Added = 0;
    Updated = 1;
    Deleted = 2;
    Noop = 3;
}

message ToDoUpdate {
    ToDoUpdateType updateType = 1;
    ToDo todo = 2;
}

message AddToDoOp {
    NewToDo todo = 1;
}

message UpdateToDoOp {
    string todoID = 1;
    bool done = 2;
}

message DeleteToDoOp {
    string todoID = 1;
}

message ToDoOp {
    oneof op {
        AddToDoOp add = 1; 
        UpdateToDoOp upd = 2; 
        DeleteToDoOp del = 3; 
    }
}

message Ping {
    int64 msgID = 1;
}

message Pong {
    int64 msgID = 1;
}
